name: Build and Publish Ansible Collection

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  COLLECTION_NAMESPACE: kush_gupt
  COLLECTION_NAME: ed_25_03
  COLLECTION_PATH: ansible/ansible_collections/cisa/ed_25_03

jobs:
  lint-and-test:
    name: Lint and Test Collection
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ansible Environment
        uses: ./.github/actions/setup-ansible
        with:
          install-lint-tools: 'true'

      - name: Build and Install Collection
        uses: ./.github/actions/build-collection
        with:
          collection-path: ${{ env.COLLECTION_PATH }}
          collection-namespace: ${{ env.COLLECTION_NAMESPACE }}
          collection-name: ${{ env.COLLECTION_NAME }}
          install-for-linting: 'true'

      - name: Validate Collection
        uses: ./.github/actions/validate-collection
        with:
          collection-path: ${{ env.COLLECTION_PATH }}

  build:
    name: Build Collection
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    outputs:
      collection-version: ${{ steps.build-collection.outputs.version }}
      artifact-path: ${{ steps.build-collection.outputs.artifact-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ansible Environment
        uses: ./.github/actions/setup-ansible

      - name: Build Collection
        id: build-collection
        uses: ./.github/actions/build-collection
        with:
          collection-path: ${{ env.COLLECTION_PATH }}
          collection-namespace: ${{ env.COLLECTION_NAMESPACE }}
          collection-name: ${{ env.COLLECTION_NAME }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ansible-collection
          path: build/*.tar.gz
          retention-days: 30

  publish-galaxy:
    name: Publish to Ansible Galaxy
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ansible Environment
        uses: ./.github/actions/setup-ansible

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ansible-collection
          path: build/

      - name: List artifacts
        run: |
          echo "Available artifacts:"
          ls -la build/

      - name: Publish to Ansible Galaxy
        env:
          ANSIBLE_GALAXY_API_KEY: ${{ secrets.ANSIBLE_GALAXY_API_KEY }}
        run: |
          if [ -z "$ANSIBLE_GALAXY_API_KEY" ]; then
            echo "ERROR: ANSIBLE_GALAXY_API_KEY secret is not set"
            echo "Please add your Ansible Galaxy API key as a repository secret"
            exit 1
          fi
          
          COLLECTION_FILE=$(ls build/*.tar.gz | head -1)
          echo "Publishing collection: $COLLECTION_FILE"
          
          ansible-galaxy collection publish "$COLLECTION_FILE" \
            --api-key "$ANSIBLE_GALAXY_API_KEY"

      - name: Verify publication
        run: |
          echo "Collection published successfully!"
          echo "You can view it at: https://galaxy.ansible.com/${{ env.COLLECTION_NAMESPACE }}/${{ env.COLLECTION_NAME }}"

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, publish-galaxy]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ansible-collection
          path: build/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
